---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
// This is a statically generated page, so we can use the getStaticPaths function to generate the paths for each tag in the tag list.
//"The getStaticPaths function returns an array of page routes, and all of the pages at those routes will use the same template defined in the file."
export async function getStaticPaths() {
    const allPosts = await Astro.glob("../posts/*.md");
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
    ];
    //A getStaticPaths function should always return a list of objects containing params (what to call each page route) and optionally any
    //props (data that you want to pass to those pages). Earlier, you defined each tag name that you knew was used in your blog and passed the entire list of posts as props to each page.
    //Now, you generate this list of objects automatically using your uniqueTags array to define each parameter.
    //And, now the list of all blog posts is filtered before it is sent to each page as props. Be sure to remove the previous line of code filtering the posts, and update your HTML template to use posts instead of filteredPosts.
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.frontmatter.tags.includes(tag),
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>
    <ul>
        {
            posts.map((post) => (
                <BlogPost url={post.url} title={post.frontmatter.title} />
            ))
        }
    </ul>
</BaseLayout>
